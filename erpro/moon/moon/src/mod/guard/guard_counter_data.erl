%%----------------------------------------------------
%% 洛水反击数据 
%% @author shawn 
%%----------------------------------------------------
-module(guard_counter_data).
-export([
        get_lev/1
        ,get_small/1
        ,get_paths/1
        ,get_return_road/1
        ,to_point/1
        ,get_ratio/1
        ,get_next_ratio/1
    ]
).

%% 获取波数信息
get_lev(1) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(2) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(3) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(4) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(5) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(6) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(7) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(8) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(9) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(10) ->
    {2, 10, [1,2,3,1,3,3,2,5,5,7]};
get_lev(11) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(12) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(13) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(14) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(15) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(16) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(17) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(18) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(19) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(20) ->
    {2, 14, [3,4,5,3,5,5,7,7]};
get_lev(21) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(22) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(23) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(24) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(25) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(26) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(27) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(28) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(29) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(30) ->
    {2, 14, [5,5,6,7,7,8,7,7]};
get_lev(31) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(32) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(33) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(34) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(35) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(36) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(37) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(38) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(39) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(40) ->
    {2, 14, [5,6,7,7,8,7,7,8]};
get_lev(41) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(42) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(43) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(44) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(45) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(46) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(47) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(48) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(49) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(50) ->
    {4, 18, [5,6,7,7,8,7,7,8]};
get_lev(_) -> false.

%% 获取小节信息
get_small(1) ->
    [{22090,1,120,600,1},{22091,1,180,570,2},{22092,1,240,540,3},{22093,1,300,510,4},{22090,1,720,210,5},{22091,1,780,180,6},{22092,1,840,150,7},{22093,1,900,120,8}];
get_small(2) ->
    [{22094,1,120,600,1},{22095,1,180,570,2},{22096,1,240,540,3},{22097,1,300,510,4},{22094,1,720,210,5},{22095,1,780,180,6},{22096,1,840,150,7},{22097,1,900,120,8}];
get_small(3) ->
    [{22098,1,120,600,1},{22099,1,180,570,2},{22100,1,240,540,3},{22101,1,300,510,4},{22098,1,720,210,5},{22099,1,780,180,6},{22100,1,840,150,7},{22101,1,900,120,8}];
get_small(4) ->
    [{22102,1,120,600,1},{22103,1,180,570,2},{22104,1,240,540,3},{22105,1,300,510,4},{22102,1,720,210,5},{22103,1,780,180,6},{22104,1,840,150,7},{22105,1,900,120,8}];
get_small(5) ->
    [{22106,1,120,600,1},{22107,1,180,570,2},{22108,1,240,540,3},{22109,1,300,510,4},{22106,1,720,210,5},{22107,1,780,180,6},{22108,1,840,150,7},{22109,1,900,120,8}];
get_small(6) ->
    [{22110,1,120,600,1},{22111,1,180,570,2},{22112,1,240,540,3},{22113,1,300,510,4},{22110,1,720,210,5},{22111,1,780,180,6},{22112,1,840,150,7},{22113,1,900,120,8}];
get_small(7) ->
    [{22114,1,120,600,1},{22115,1,180,570,2},{22116,1,240,540,3},{22117,1,300,510,4},{22114,1,720,210,5},{22115,1,780,180,6},{22116,1,840,150,7},{22117,1,900,120,8}];
get_small(8) ->
    [{22118,1,120,600,1},{22119,1,180,570,2},{22120,1,240,540,3},{22121,1,300,510,4},{22118,1,720,210,5},{22119,1,780,180,6},{22120,1,840,150,7},{22121,1,900,120,8}];
get_small(_) -> [].

%% 获取路径
get_paths(1) ->
    [
        [{240,750},{540,780},{780,900},{1020,1020},{1260,1140},{1440,1290},{1740,1440},{1980,1590},{2220,1740},{2520,1890},{2820,2040},{3120,2190},{3420,2340},{3720,2460},{4020,2610},{4200,2790},{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}]
    ];
get_paths(2) ->
    [
        [{300,720},{660,750},{900,870},{1080,990},{1320,1110},{1500,1260},{1800,1410},{2040,1560},{2280,1710},{2580,1860},{2880,2010},{3180,2160},{3480,2310},{3780,2430},{4080,2580},{4260,2760},{4500,2910},{4740,3090},{5040,3240},{5280,3420},{5520,3570},{5820,3720},{-1,-1}]
    ];
get_paths(3) ->
    [
        [{360,690},{780,660},{960,810},{1140,930},{1380,1050},{1560,1200},{1860,1350},{2100,1500},{2340,1650},{2640,1800},{2940,1950},{3240,2100},{3540,2250},{3840,2370},{4140,2520},{4320,2700},{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}]
    ];
get_paths(4) ->
    [
        [{420,660},{840,630},{1020,780},{1200,900},{1440,1020},{1620,1170},{1920,1320},{2160,1470},{2400,1620},{2700,1770},{3000,1920},{3300,2070},{3600,2220},{3900,2340},{4200,2490},{4380,2670},{4620,2820},{4860,3000},{5160,3150},{5400,3330},{5640,3480},{5880,3690},{-1,-1}]
    ];
get_paths(5) ->
    [
        [{780,390},{960,570},{1140,690},{1320,810},{1560,930},{1740,1080},{2040,1230},{2280,1380},{2520,1530},{2820,1680},{3120,1830},{3420,1980},{3720,2130},{4020,2250},{4320,2400},{4500,2580},{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}]
    ];
get_paths(6) ->
    [
        [{840,360},{1020,540},{1200,660},{1380,780},{1620,900},{1800,1050},{2100,1200},{2340,1350},{2580,1500},{2880,1650},{3180,1800},{3480,1950},{3780,2100},{4080,2220},{4380,2370},{4560,2550},{4800,2700},{5040,2880},{5340,3030},{5580,3210},{5820,3360},{6000,3600},{-1,-1}]
    ];
get_paths(7) ->
    [
        [{1020,270},{1140,480},{1320,600},{1500,720},{1740,840},{1920,990},{2160,1140},{2400,1290},{2640,1440},{2940,1590},{3240,1740},{3540,1890},{3840,2040},{4140,2160},{4440,2310},{4620,2490},{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}]
    ];
get_paths(8) ->
    [
        [{1080,240},{1200,450},{1380,570},{1560,690},{1800,810},{1980,960},{2220,1110},{2460,1260},{2700,1410},{3000,1560},{3300,1710},{3600,1860},{3900,2010},{4200,2130},{4500,2280},{4680,2460},{4920,2610},{5160,2790},{5460,2940},{5700,3120},{5940,3270},{6060,3570},{-1,-1}]
    ];

get_paths(_) -> [].

%% 获取返回路径
get_return_road(1) ->
    [{780,900},{1020,1020},{1260,1140},{1440,1290},{1740,1440},{1980,1590},{2220,1740},{2520,1890},{2820,2040},{3120,2190},{3420,2340},{3720,2460},{4020,2610},{4200,2790},{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(2) ->
    [{1260,1140},{1440,1290},{1740,1440},{1980,1590},{2220,1740},{2520,1890},{2820,2040},{3120,2190},{3420,2340},{3720,2460},{4020,2610},{4200,2790},{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(3) ->
    [{1740,1440},{1980,1590},{2220,1740},{2520,1890},{2820,2040},{3120,2190},{3420,2340},{3720,2460},{4020,2610},{4200,2790},{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(4) ->
    [{2220,1740},{2520,1890},{2820,2040},{3120,2190},{3420,2340},{3720,2460},{4020,2610},{4200,2790},{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(5) ->
    [{2820,2040},{3120,2190},{3420,2340},{3720,2460},{4020,2610},{4200,2790},{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(6) ->
    [{3420,2340},{3720,2460},{4020,2610},{4200,2790},{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(7) ->
    [{4020,2610},{4200,2790},{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(8) ->
    [{4440,2940},{4680,3120},{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(9) ->
    [{4980,3270},{5220,3450},{5460,3600},{5820,3720},{-1,-1}];
get_return_road(10) ->
    [{5460,3600},{5820,3720},{-1,-1}];
get_return_road(11) ->
    [{960,810},{1140,930},{1380,1050},{1560,1200},{1860,1350},{2100,1500},{2340,1650},{2640,1800},{2940,1950},{3240,2100},{3540,2250},{3840,2370},{4140,2520},{4320,2700},{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(12) ->
    [{1380,1050},{1560,1200},{1860,1350},{2100,1500},{2340,1650},{2640,1800},{2940,1950},{3240,2100},{3540,2250},{3840,2370},{4140,2520},{4320,2700},{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(13) ->
    [{1860,1350},{2100,1500},{2340,1650},{2640,1800},{2940,1950},{3240,2100},{3540,2250},{3840,2370},{4140,2520},{4320,2700},{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(14) ->
    [{2340,1650},{2640,1800},{2940,1950},{3240,2100},{3540,2250},{3840,2370},{4140,2520},{4320,2700},{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(15) ->
    [{2940,1950},{3240,2100},{3540,2250},{3840,2370},{4140,2520},{4320,2700},{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(16) ->
    [{3540,2250},{3840,2370},{4140,2520},{4320,2700},{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(17) ->
    [{4140,2520},{4320,2700},{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(18) ->
    [{4560,2580},{4800,3030},{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(19) ->
    [{5100,3180},{5340,3360},{5580,3510},{5880,3690},{-1,-1}];
get_return_road(20) ->
    [{5580,3510},{5880,3690},{-1,-1}];
get_return_road(21) ->
    [{1140,690},{1320,810},{1560,930},{1740,1080},{2040,1230},{2280,1380},{2520,1530},{2820,1680},{3120,1830},{3420,1980},{3720,2130},{4020,2250},{4320,2400},{4500,2580},{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(22) ->
    [{1560,930},{1740,1080},{2040,1230},{2280,1380},{2520,1530},{2820,1680},{3120,1830},{3420,1980},{3720,2130},{4020,2250},{4320,2400},{4500,2580},{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(23) ->
    [{2040,1230},{2280,1380},{2520,1530},{2820,1680},{3120,1830},{3420,1980},{3720,2130},{4020,2250},{4320,2400},{4500,2580},{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(24) ->
    [{2520,1530},{2820,1680},{3120,1830},{3420,1980},{3720,2130},{4020,2250},{4320,2400},{4500,2580},{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(25) ->
    [{3120,1830},{3420,1980},{3720,2130},{4020,2250},{4320,2400},{4500,2580},{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(26) ->
    [{3720,2130},{4020,2250},{4320,2400},{4500,2580},{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(27) ->
    [{4320,2400},{4500,2580},{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(28) ->
    [{4740,2730},{4980,2910},{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(29) ->
    [{5280,3060},{5520,3240},{5760,3390},{6000,3600},{-1,-1}];
get_return_road(30) ->
    [{5760,3390},{6000,3600},{-1,-1}];
get_return_road(31) ->
    [{1320,600},{1500,720},{1740,840},{1920,990},{2160,1140},{2400,1290},{2640,1440},{2940,1590},{3240,1740},{3540,1890},{3840,2040},{4140,2160},{4440,2310},{4620,2490},{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(32) ->
    [{1740,840},{1920,990},{2160,1140},{2400,1290},{2640,1440},{2940,1590},{3240,1740},{3540,1890},{3840,2040},{4140,2160},{4440,2310},{4620,2490},{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(33) ->
    [{2160,1140},{2400,1290},{2640,1440},{2940,1590},{3240,1740},{3540,1890},{3840,2040},{4140,2160},{4440,2310},{4620,2490},{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(34) ->
    [{2640,1440},{2940,1590},{3240,1740},{3540,1890},{3840,2040},{4140,2160},{4440,2310},{4620,2490},{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(35) ->
    [{3240,1740},{3540,1890},{3840,2040},{4140,2160},{4440,2310},{4620,2490},{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(36) ->
    [{3840,2040},{4140,2160},{4440,2310},{4620,2490},{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(37) ->
    [{4440,2310},{4620,2490},{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(38) ->
    [{4860,2640},{5100,2820},{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(39) ->
    [{5400,2970},{5640,3150},{5880,3330},{6060,3570},{-1,-1}];
get_return_road(40) ->
    [{5880,3330},{6060,3570},{-1,-1}];
get_return_road(_)  -> [{-1, -1}].

%% 获取怪物积分
to_point(22090) ->
    3;
to_point(22091) ->
    3;
to_point(22092) ->
    3;
to_point(22093) ->
    3;
to_point(22094) ->
    3;
to_point(22095) ->
    3;
to_point(22096) ->
    3;
to_point(22097) ->
    5;
to_point(22098) ->
    3;
to_point(22099) ->
    3;
to_point(22100) ->
    3;
to_point(22101) ->
    3;
to_point(22102) ->
    3;
to_point(22103) ->
    3;
to_point(22104) ->
    3;
to_point(22105) ->
    5;
to_point(22106) ->
    3;
to_point(22107) ->
    3;
to_point(22108) ->
    3;
to_point(22109) ->
    3;
to_point(22110) ->
    3;
to_point(22111) ->
    3;
to_point(22112) ->
    3;
to_point(22113) ->
    5;
to_point(22114) ->
    3;
to_point(22115) ->
    3;
to_point(22116) ->
    3;
to_point(22117) ->
    3;
to_point(22118) ->
    3;
to_point(22119) ->
    3;
to_point(22120) ->
    3;
to_point(22121) ->
    5;
to_point(_) -> 0.

%% 获取小节翻倍系数
get_ratio(1) ->
    [1,1.5,2,3,4];
get_ratio(2) ->
    [1,1.5,2,3,4];
get_ratio(3) ->
    [1,1.5,2,3,4];
get_ratio(4) ->
    [1,1.5,2,3,4];
get_ratio(5) ->
    [1,1.5,2,3,4];
get_ratio(6) ->
    [1,1.5,2,3,4];
get_ratio(7) ->
    [1,1.5,2,3,4];
get_ratio(8) ->
    [1,1.5,2,3,4];
get_ratio(9) ->
    [1,1.5,2,3,4];
get_ratio(10) ->
    [1,1.5,2,3,4];
get_ratio(11) ->
    [1,1.5,2,3,3];
get_ratio(12) ->
    [1,1.5,2,3,3];
get_ratio(13) ->
    [1,1.5,2,3,3];
get_ratio(14) ->
    [1,1.5,2,3,3];
get_ratio(15) ->
    [1,1.5,2,3,3];
get_ratio(16) ->
    [1,1.5,2,3,3];
get_ratio(17) ->
    [1,1.5,2,3,3];
get_ratio(18) ->
    [1,1.5,2,3,3];
get_ratio(19) ->
    [1,1.5,2,3,3];
get_ratio(20) ->
    [1,1.5,2,3,3];
get_ratio(21) ->
    [1,1.5,2,3,3];
get_ratio(22) ->
    [1,1.5,2,3,3];
get_ratio(23) ->
    [1,1.5,2,3,3];
get_ratio(24) ->
    [1,1.5,2,3,3];
get_ratio(25) ->
    [1,1.5,2,3,3];
get_ratio(26) ->
    [1,1.5,2,3,3];
get_ratio(27) ->
    [1,1.5,2,3,3];
get_ratio(28) ->
    [1,1.5,2,3,3];
get_ratio(29) ->
    [1,1.5,2,3,3];
get_ratio(30) ->
    [1,1.5,2,3,3];
get_ratio(31) ->
    [1,1.5,1.5,2,3];
get_ratio(32) ->
    [1,1.5,1.5,2,3];
get_ratio(33) ->
    [1,1.5,1.5,2,3];
get_ratio(34) ->
    [1,1.5,1.5,2,3];
get_ratio(35) ->
    [1,1.5,1.5,2,3];
get_ratio(36) ->
    [1,1.5,1.5,2,3];
get_ratio(37) ->
    [1,1.5,1.5,2,3];
get_ratio(38) ->
    [1,1.5,1.5,2,3];
get_ratio(39) ->
    [1,1.5,1.5,2,3];
get_ratio(40) ->
    [1,1.5,1.5,2,3];
get_ratio(41) ->
    [1,1.5,1.5,2,2];
get_ratio(42) ->
    [1,1.5,1.5,2,2];
get_ratio(43) ->
    [1,1.5,1.5,2,2];
get_ratio(44) ->
    [1,1.5,1.5,2,2];
get_ratio(45) ->
    [1,1.5,1.5,2,2];
get_ratio(46) ->
    [1,1.5,1.5,2,2];
get_ratio(47) ->
    [1,1.5,1.5,2,2];
get_ratio(48) ->
    [1,1.5,1.5,2,2];
get_ratio(49) ->
    [1,1.5,1.5,2,2];
get_ratio(50) ->
    [1,1.5,1.5,2,2];
get_ratio(_) -> [1, 1, 1, 1, 1].

%% 获取小节间隔时间系数
get_next_ratio(1) ->
    [2,2,1.5,1,1];
get_next_ratio(2) ->
    [2,2,1.5,1,1];
get_next_ratio(3) ->
    [2,2,1.5,1,1];
get_next_ratio(4) ->
    [2,2,1.5,1,1];
get_next_ratio(5) ->
    [2,2,1.5,1,1];
get_next_ratio(6) ->
    [2,2,1.5,1,1];
get_next_ratio(7) ->
    [2,2,1.5,1,1];
get_next_ratio(8) ->
    [2,2,1.5,1,1];
get_next_ratio(9) ->
    [2,2,1.5,1,1];
get_next_ratio(10) ->
    [2,2,1.5,1,1];
get_next_ratio(11) ->
    [1.5,1.5,1,1,1];
get_next_ratio(12) ->
    [1.5,1.5,1,1,1];
get_next_ratio(13) ->
    [1.5,1.5,1,1,1];
get_next_ratio(14) ->
    [1.5,1.5,1,1,1];
get_next_ratio(15) ->
    [1.5,1.5,1,1,1];
get_next_ratio(16) ->
    [1.5,1.5,1,1,1];
get_next_ratio(17) ->
    [1.5,1.5,1,1,1];
get_next_ratio(18) ->
    [1.5,1.5,1,1,1];
get_next_ratio(19) ->
    [1.5,1.5,1,1,1];
get_next_ratio(20) ->
    [1.5,1.5,1,1,1];
get_next_ratio(21) ->
    [1.5,1.5,1,1,1];
get_next_ratio(22) ->
    [1.5,1.5,1,1,1];
get_next_ratio(23) ->
    [1.5,1.5,1,1,1];
get_next_ratio(24) ->
    [1.5,1.5,1,1,1];
get_next_ratio(25) ->
    [1.5,1.5,1,1,1];
get_next_ratio(26) ->
    [1.5,1.5,1,1,1];
get_next_ratio(27) ->
    [1.5,1.5,1,1,1];
get_next_ratio(28) ->
    [1.5,1.5,1,1,1];
get_next_ratio(29) ->
    [1.5,1.5,1,1,1];
get_next_ratio(30) ->
    [1.5,1.5,1,1,1];
get_next_ratio(31) ->
    [1.5,1.5,1,1,1];
get_next_ratio(32) ->
    [1.5,1.5,1,1,1];
get_next_ratio(33) ->
    [1.5,1.5,1,1,1];
get_next_ratio(34) ->
    [1.5,1.5,1,1,1];
get_next_ratio(35) ->
    [1.5,1.5,1,1,1];
get_next_ratio(36) ->
    [1.5,1.5,1,1,1];
get_next_ratio(37) ->
    [1.5,1.5,1,1,1];
get_next_ratio(38) ->
    [1.5,1.5,1,1,1];
get_next_ratio(39) ->
    [1.5,1.5,1,1,1];
get_next_ratio(40) ->
    [1.5,1.5,1,1,1];
get_next_ratio(41) ->
    [1.5,1.5,1,1,1];
get_next_ratio(42) ->
    [1.5,1.5,1,1,1];
get_next_ratio(43) ->
    [1.5,1.5,1,1,1];
get_next_ratio(44) ->
    [1.5,1.5,1,1,1];
get_next_ratio(45) ->
    [1.5,1.5,1,1,1];
get_next_ratio(46) ->
    [1.5,1.5,1,1,1];
get_next_ratio(47) ->
    [1.5,1.5,1,1,1];
get_next_ratio(48) ->
    [1.5,1.5,1,1,1];
get_next_ratio(49) ->
    [1.5,1.5,1,1,1];
get_next_ratio(50) ->
    [1.5,1.5,1,1,1];
get_next_ratio(_) -> [2, 2, 1.5, 1, 1].
