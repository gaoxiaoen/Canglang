<?php
/**
 * 针对mm_map.xml生成相应的配置文件
 */
 
$opType=$argv[1];
if( !$opType ){
	echo '请使用语法: php build_mm_map.php server|client'."\n";
	exit;
}

$curPwd = getcwd();
$appRoot = dirname($curPwd).'/';
chdir($appRoot);
$file = "proto/mm_map.xml";
if (!file_exists($file))
{
    print "文件{$appRoot}{$file}不存在";
    exit(1);
}
print "开始分析文件:{$appRoot}{$file} ... \r\n";
$opTime = date('Y-m-d H:i:s');

$xml = simplexml_load_file($file);

$moduleArray = array();
$methodArray = array();
$mmDefineArray = array();
$modMethodArray = array();

$modules = $xml->module;
foreach ( $modules as $m ) {
	$a = $m->attributes ();
	$name = ( string ) $a ['name'];
	$id = intval ( $a ['id'] );
	$nameUp = strtoupper ( $name );
	$nameLower = strtolower ( $name );
	$moduleArray [$nameLower] = $id;
	$mmDefineArray [$nameUp] = $id;
	
	$methods = $m->method;
	foreach ( $methods as $me ) {
		$mm = $me->attributes ();
		$nameM = ( string ) $mm ['name'];
		$idM = intval ( $mm ['id'] );
		$nameMUP = strtoupper ( $nameM );
		$nameMLower = strtolower ( $nameM );
		$methodArray [$nameMLower] = $idM;
		$mmDefineArray [$nameMUP] = $idM;
		$modMethodArray [$nameUp] [] = $nameMUP;
	}
}

if ($opType == "server") {
	// 生成mm_define.hrl
	$mm_define_hrl  = "%% Author: caochuncheng2002@gmail.com\n";
	$mm_define_hrl .= "%% Created: 2015-09-23\n";
	$mm_define_hrl .= "%% Description: proto module method hrl\n";
	$mm_define_hrl .= "%% This file is generated by script tool,Do not edit it.\n\n";
	//$mm_define_hrl .= "%% Generate Time:".$opTime."\n\n";
	foreach($mmDefineArray as $k=>$v)
	{
		$mm_define_hrl .= "-define($k, $v).\r\n";
	}
	$mmDefineFileName = "hrl/mm_define.hrl";
	@unlink($mmDefineFileName);
	file_put_contents($mmDefineFileName, $mm_define_hrl);
	
	print "生成{$appRoot}{$mmDefineFileName}成功\r\n";
	
	
	$mm_map_erl = $appRoot."config/src/proto/mm_map.erl";
	gen_mm_map_erl($mm_map_erl,$moduleArray,$methodArray,$opTime);
	print "生成{$mm_map_erl}成功 \r\n";
}
function gen_mm_map_erl($file,$modules,$methods,$opTime) {
	$code  = "%% Author: caochuncheng2002@gmail.com\n";
	$code .= "%% Created: 2015-09-23\n";
	$code .= "%% Description: proto module method map erl\n";
	$code .= "%% This file is generated by script tool,Do not edit it.\n\n";
	//$code .= "%% Generate Time:".$opTime."\n\n";
	$code .= "-module(mm_map).\n\n\n";
	$code .= "-export([\n";
	$code .= "         mod/1,\n";
	$code .= "         mod_name/1,\n";
	$code .= "         method/1,\n";
	$code .= "         method_name/1,\n";
	$code .= "         tos/1,\n";
	$code .= "         toc/1\n";
	$code .= "        ]).\n\n";

	foreach($modules as $k=>$v){
		$code .= "mod(". $v . ")-> ". $k. ";\n";
	}
	$code .= "mod(_)-> undefined.\n\n";
	
	foreach($modules as $k=>$v){
		$code .= "mod_name(". $k . ")-> ". $v. ";\n";
	}
	$code .= "mod_name(_)-> undefined.\n\n";

	foreach($methods as $k=>$v){
		$code .= "method(". $v . ")-> ". $k. ";\n";
	}
	$code .= "method(_)-> undefined.\n\n";
	
	foreach($methods as $k=>$v){
		$code .= "method_name(". $k . ")-> ". $v. ";\n";
	}
	$code .= "method_name(_)-> undefined.\n\n";
	

	foreach($methods as $k=>$v){
		$code .= "tos(". $v . ")-> m_". $k. "_tos;\n";
	}
	$code .= "tos(_)-> undefined.\n\n";

	foreach($methods as $k=>$v){
		$code .= "toc(m_". $k . "_toc)-> ". $v. ";\n";
	}
	$code .= "toc(_)-> undefined.\n\n";

	@unlink($file);
	file_put_contents($file, $code);
}

if ($opType == "client") {
	// 生成前端文件
	$socketCommandLua  = "-- Author: caochuncheng2002@gmail.com\n";
	$socketCommandLua.= "-- Created: 2015-09-24\n";
	$socketCommandLua .= "-- Description: proto lua config\n";
	$socketCommandLua .= "-- This file is generated by script tool,Do not edit it.\n\n";
	//$socketCommandLua .= "-- Generate Time:".$opTime." \n\n\n";
	$socketCommandLua .= "local SocketCommand={\n";
	foreach($modMethodArray as $module => $methodList){
		$socketCommandLua .= "\n    --{$module}\n";
	
		foreach($methodList as $method){
			$sid = $mmDefineArray[$method];
			$socketCommandLua .= '    '.$method.' = '.$sid.','."\n";
		}
	}
	$socketCommandLua .= <<<EOT
}
return SocketCommand
EOT;
	
	$socketCommandLuaFile = "front-end/SocketCommand.lua";
	@unlink($socketCommandLuaFile);
	file_put_contents($socketCommandLuaFile, $socketCommandLua);
	print "生成{$appRoot}{$socketCommandLuaFile}成功\r\n";
}